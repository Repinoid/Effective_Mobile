services:
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: a@e.com
      PGADMIN_DEFAULT_PASSWORD: admpass
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8088:80"
    depends_on:
      - db
    networks:
      - localnet

  db:
    image: postgres:17
    container_name: dbcont
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - localnet
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    container_name: sapp
    build:
      # путь до докерфайла
      context: ./
      # докерфайл
      dockerfile: ServerDockerFile
    ports:
      - "8080:8080"
    environment:
      MIGRATIONS_PATH: "file://migrations"
      BASE_HOST: db
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      APP_HOST: ${APP_HOST} #         "0.0.0.0" # Сервер будет слушать все интерфейсы

    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - localnet
    logging:
      driver: "loki"
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"      


  loki:
    image: grafana/loki:2.8.2
    user: "10001:10001"  # Пользователь из образа Loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki-data:/tmp/loki
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      - UMASK=002  # Права для создаваемых файлов

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - loki


volumes:
  postgres_data:
  pgadmin_data:
  # grafana-storage:


networks:
  localnet:
    driver: bridge
    name: isem

# docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions

# mkdir -p loki-data/{chunks,rules,boltdb-shipper-active,boltdb-shipper-cache}